<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <groupId>com.example</groupId>
  <artifactId>java-maven-junit-helloworld</artifactId>
  <version>2.0-SNAPSHOT</version>
  <packaging>jar</packaging>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <!-- This configures the compiler to produce Java 8 class files. -->
    <!-- The minimum JDK version installed is 8 of course, but newer JDK releases should work too. -->
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>${maven.compiler.source}</maven.compiler.target>

    <junit.jupiter.version>5.2.0</junit.jupiter.version>
    <junit.platform.version>1.2.0</junit.platform.version>
    <hamcrest.version>1.3</hamcrest.version>
    <mockito.version>2.21.0</mockito.version>
    <jacoco.plugin.version>0.8.1</jacoco.plugin.version>
    
    <!-- checkstyle -->
    <checkstyle.version>8.16</checkstyle.version>
    <checkstyle.plugin.version>2.17</checkstyle.plugin.version>
    <sevntu.checkstyle.plugin.version>1.32.0</sevntu.checkstyle.plugin.version>
    <!-- spotbugs -->
    <spotbugs.version>3.1.3</spotbugs.version>
  </properties>

  <dependencies>
    <!-- Testing dependencies. -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>${junit.jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <version>${junit.jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${junit.jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-core</artifactId>
      <version>${hamcrest.version}</version>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-junit-jupiter</artifactId>
      <version>${mockito.version}</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/com.github.spotbugs/spotbugs-maven-plugin -->
    <dependency>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-maven-plugin</artifactId>
        <version>${spotbugs.version}</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>

      <plugin>
        <!-- Configures the compiler. -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.0</version>
        <configuration>
          <compilerArgs>
            <arg>-Xlint</arg>
          </compilerArgs>
        </configuration>
      </plugin>

      <plugin>
        <!-- Unit tests are run by surefire. -->
        <!-- Classes under src/test/java called *Test are included automatically. -->
        <!-- Unit tests are run during the test phase. -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.22.0</version>
      </plugin>
      <plugin>
        <!-- Integration tests are run by failsafe. -->
        <!-- Classes under src/test/java called *IT are included automatically. -->
        <!-- Integration tests are run during the verify phase. -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>2.22.0</version>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <!-- Code coverage plugin. -->
        <!-- This sets up code coverage for the unit tests, the integration tests, -->
        <!-- and the combined coverage of both. -->
        <!-- After running a `mvn clean install`, open `target/site/jacoco-both/index.html` in a browser. -->
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco.plugin.version}</version>
        <executions>
          <execution>
            <id>jacoco-prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>jacoco-prepare-agent-integration</id>
            <goals>
              <goal>prepare-agent-integration</goal>
            </goals>
          </execution>
          <execution>
            <id>jacoco-report</id>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
          <execution>
            <id>jacoco-check</id>
            <goals>
              <goal>check</goal>
            </goals>
            <configuration>
              <rules />
            </configuration>
          </execution>
          <execution>
            <!-- Combine the code coverage statistics generated for the unit and the integration tests. -->
            <id>jacoco-merge</id>
            <goals>
              <goal>merge</goal>
            </goals>
            <phase>verify</phase>
            <configuration>
              <fileSets>
                <fileSet>
                  <directory>${project.build.directory}</directory>
                  <includes>
                    <include>*.exec</include>
                  </includes>
                </fileSet>
              </fileSets>
              <destFile>${project.build.directory}/jacoco-both.exec</destFile>
            </configuration>
          </execution>
          <execution>
            <id>jacoco-integration</id>
            <goals>
              <goal>report-integration</goal>
            </goals>
          </execution>
          <execution>
            <id>jacoco-reportboth</id>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <dataFile>${project.build.directory}/jacoco-both.exec</dataFile>
              <outputDirectory>${project.reporting.outputDirectory}/jacoco-both</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
          <!-- checkstyle -->
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>${checkstyle.plugin.version}</version>
          <dependencies>
              <dependency>
                  <groupId>com.puppycrawl.tools</groupId>
                  <artifactId>checkstyle</artifactId>
                  <version>${checkstyle.version}</version>
              </dependency>
              <dependency>
                  <groupId>com.github.sevntu-checkstyle</groupId>
                  <artifactId>sevntu-checkstyle-maven-plugin</artifactId>
                  <version>${sevntu.checkstyle.plugin.version}</version>
              </dependency>
          </dependencies>
          <!-- Specifying configuration here will take effect on the execution of "mvn checkstyle:checkstyle",
               but will not take effect on the execution of "mvn site"  -->
          <configuration>
              <configLocation>checkstyle.xml</configLocation>
              <failOnViolation>false</failOnViolation>
          </configuration>
      </plugin>
      <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.7.1</version>
      </plugin>

      <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>3.0.0</version>
      </plugin>
    </plugins>
  </build>
  
    <!-- レポート -->
  <reporting>
      <plugins>
          <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-project-info-reports-plugin</artifactId>
              <version>2.9</version>
              <reportSets>
                  <reportSet>
                      <reports>
                          <report>index</report>
                          <report>summary</report>
                          <report>project-team</report>
                          <report>plugin-management</report>
                          <report>plugins</report>
                          <!-- report>dependencies</report -->
                      </reports>
                  </reportSet>
              </reportSets>
          </plugin>
          <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-checkstyle-plugin</artifactId>
              <version>${checkstyle.plugin.version}</version>
              <!-- Specifying configuration here will take effect on the execution of "mvn site",
                   but will not take effect on the execution of "mvn checkstyle:checkstyle"  -->
              <configuration> 
                  <encoding>${project.build.sourceEncoding}</encoding>
                  <configLocation>checkstyle.xml</configLocation>
                  <resourceExcludes>**/*.properties</resourceExcludes>
              </configuration>
          </plugin>
          <plugin>
              <groupId>com.github.spotbugs</groupId>
              <artifactId>spotbugs-maven-plugin</artifactId>
              <version>${spotbugs.version}</version>
              <configuration>
                  <!-- includeFilterFile>${basedir}/findbugs-include.xml</includeFilterFile -->
                  <excludeFilterFile>findbugs-exclude.xml</excludeFilterFile>
                  <xmlOutput>true</xmlOutput>
                  <failOnError>false</failOnError>
                  <!-- High|Normal|Low|Exp|Ignore -->
                  <threshold>Normal</threshold>
                  <!-- Min|Default|Max -->
                  <effort>Default</effort>
                  <sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
              </configuration>
          </plugin>
          <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-surefire-report-plugin</artifactId>
              <version>2.22.1</version>
              <reportSets>
                  <reportSet>
                      <reports>
                          <report>report-only</report>
                      </reports>
                  </reportSet>
              </reportSets>
          </plugin>
          <plugin>
              <groupId>org.jacoco</groupId>
              <artifactId>jacoco-maven-plugin</artifactId>
          </plugin>
      </plugins>
  </reporting>
</project>
